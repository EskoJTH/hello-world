name: retry
version: 0.7.4.2
id: retry-0.7.4.2-HdceGqtiixn3cD8enDISlv
key: retry-0.7.4.2-HdceGqtiixn3cD8enDISlv
license: BSD3
copyright: Ozgun Ataman, Soostone Inc
maintainer: ozgun.ataman@soostone.com
homepage: http://github.com/Soostone/retry
synopsis: Retry combinators for monadic actions that may fail
description:
    This package exposes combinators that can wrap arbitrary
    monadic actions. They run the action and potentially retry
    running it with some configurable delay for a configurable
    number of times.
    The purpose is to make it easier to work with IO and
    especially network IO actions that often experience temporary
    failure and warrant retrying of the original action. For
    example, a database query may time out for a while, in which
    case we should hang back for a bit and retry the query instead
    of simply raising an exception.
category: Control
author: Ozgun Ataman
exposed: True
exposed-modules:
    Control.Retry
abi: 9da9a329bfaec835b54b531193b576d4
trusted: False
import-dirs: C:\projects\Haskell\.cabal-sandbox\x86_64-windows-ghc-8.0.1\retry-0.7.4.2-HdceGqtiixn3cD8enDISlv
library-dirs: C:\projects\Haskell\.cabal-sandbox\x86_64-windows-ghc-8.0.1\retry-0.7.4.2-HdceGqtiixn3cD8enDISlv
data-dir: C:\projects\Haskell\.cabal-sandbox\x86_64-windows-ghc-8.0.1\retry-0.7.4.2
hs-libraries: HSretry-0.7.4.2-HdceGqtiixn3cD8enDISlv
depends:
    base-4.9.0.0 data-default-class-0.1.2.0-FYQpjIylblBDctdkHAFeXA
    exceptions-0.8.3-5OTPYzRazb4DJ75sPncYEh ghc-prim-0.5.0.0
    random-1.1-54KmMHXjttlERYcr1mvsAe transformers-0.5.2.0
haddock-interfaces: C:\projects\Haskell\.cabal-sandbox\doc\x86_64-windows-ghc-8.0.1\retry-0.7.4.2\html\retry.haddock
haddock-html: C:\projects\Haskell\.cabal-sandbox\doc\x86_64-windows-ghc-8.0.1\retry-0.7.4.2\html
