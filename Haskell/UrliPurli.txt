module Exercise where
import Prelude hiding (product)
import Data.List
import Data.Char

findChar char [] = ""
findChar char (x:xs)  = if char == x then (x:xs) else findChar char (xs)

takeHost :: String -> String
takeHost address = 
    let 
        first = findChar '/' address
        host = if first == "" then address else
            (if (let first = (x:xs) in x) == "/" then drop 2 (dropWhile (/="/") address ) else  takeWhile (/="/") address)

         
    in host
